#Keep the vk section s it's own application for testing atm
#It will take a while for the vk section to be integrated into the main application

cmake_minimum_required(VERSION 3.26)
project(VulkanEngine)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Define the path to the external directory relative to this CMakeLists.txt
set(EXTERNAL_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../../external")

# Include current directory and external libraries
include_directories(
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${EXTERNAL_DIR}/imgui
    ${EXTERNAL_DIR}/vma/include
    ${EXTERNAL_DIR}/fmt/include
    ${EXTERNAL_DIR}/glm
)

# Find Vulkan package
find_package(Vulkan REQUIRED)

file(GLOB VK_SOURCES "*.cpp")

# Add ImGui source files
set(IMGUI_SOURCES
    ${EXTERNAL_DIR}/imgui/imgui.cpp
    ${EXTERNAL_DIR}/imgui/imgui_demo.cpp
    ${EXTERNAL_DIR}/imgui/imgui_draw.cpp
    ${EXTERNAL_DIR}/imgui/imgui_widgets.cpp
)

# Add fmt source files (assuming it's a header-only library, otherwise add its source files)
# set(FMT_SOURCES
#     ${EXTERNAL_DIR}/fmt/src/format.cc
# )

add_executable(${PROJECT_NAME} 
    ${VK_SOURCES}
    ${IMGUI_SOURCES}
    # ${FMT_SOURCES}  # Uncomment if fmt is not header-only
)

# VulkanMemoryAllocator is header-only, so we don't need to compile it separately

target_link_libraries(${PROJECT_NAME} PRIVATE 
    Vulkan::Vulkan
)

# Include directories for Vulkan
target_include_directories(${PROJECT_NAME} PRIVATE
    ${Vulkan_INCLUDE_DIRS}
)

