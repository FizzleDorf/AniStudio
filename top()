[33mcommit 8c83c8c022dcb47b4954ae407e79b93bdf300e2c[m
Author: FizzleDorf <1fizzledorf@gmail.com>
Date:   Tue Dec 3 23:43:17 2024 -0500

    canvasView displayering, reworking components

[1mdiff --git a/AniStudio/ECS/Components/ImageComponents/ImageComponent.hpp b/AniStudio/ECS/Components/ImageComponents/ImageComponent.hpp[m
[1mindex c5b6fc4..b082b39 100644[m
[1m--- a/AniStudio/ECS/Components/ImageComponents/ImageComponent.hpp[m
[1m+++ b/AniStudio/ECS/Components/ImageComponents/ImageComponent.hpp[m
[36m@@ -27,6 +27,7 @@[m [mstruct ImageComponent : public ECS::BaseComponent {[m
             width = other.width;[m
             height = other.height;[m
             channels = other.channels;[m
[32m+[m[32m            textureID = other.channels;[m
         }[m
         return *this;[m
     }[m
[1mdiff --git a/AniStudio/Gui/CanvasView.cpp b/AniStudio/Gui/CanvasView.cpp[m
[1mindex f3d995e..c957712 100644[m
[1m--- a/AniStudio/Gui/CanvasView.cpp[m
[1m+++ b/AniStudio/Gui/CanvasView.cpp[m
[36m@@ -30,8 +30,8 @@[m [mvoid CanvasView::RenderCanvas() {[m
 [m
 void CanvasView::RenderBrushSettings() {[m
     ImGui::Begin("Brush Settings");[m
[31m-    ImGui::SliderFloat("Brush Size", &brush->size, 1.0f, 50.0f);[m
[31m-    ImGui::ColorEdit3("Brush Color", brush->color);[m
[32m+[m[32m    // ImGui::SliderFloat("Brush Size", &brush->size, 1.0f, 50.0f);[m
[32m+[m[32m    // ImGui::ColorEdit3("Brush Color", brush->color);[m
     ImGui::End();[m
 }[m
 [m
[36m@@ -40,6 +40,10 @@[m [mvoid CanvasView::RenderLayerManager() {[m
     if (ImGui::Button("Add Layer")) {[m
         layerManager.AddLayer();[m
     }[m
[32m+[m[32m    if (ImGui::Button("Remove Layer")) {[m
[32m+[m[32m        // layerManager.RemoveLayer();[m
[32m+[m[32m    }[m
[32m+[m
     ImGui::Text("Number of Layers: %d", static_cast<int>(layerManager.GetLayerCount()));[m
     ImGui::End();[m
 }[m
[1mdiff --git a/AniStudio/Gui/CanvasView.hpp b/AniStudio/Gui/CanvasView.hpp[m
[1mindex 7e7ad8a..79078b6 100644[m
[1m--- a/AniStudio/Gui/CanvasView.hpp[m
[1m+++ b/AniStudio/Gui/CanvasView.hpp[m
[36m@@ -13,8 +13,8 @@[m [mpublic:[m
 [m
 private:[m
     EntityID canvasEntity;[m
[31m-    CanvasComponent *canvas;[m
[31m-    BrushComponent *brush;[m
[32m+[m[32m    // CanvasComponent *canvas;[m
[32m+[m[32m    // BrushComponent *brush;[m
     LayerManager layerManager;[m
 [m
     void RenderCanvas();[m
[1mdiff --git a/AniStudio/Gui/ImageView.cpp b/AniStudio/Gui/ImageView.cpp[m
[1mindex 7f05b70..bed9500 100644[m
[1m--- a/AniStudio/Gui/ImageView.cpp[m
[1m+++ b/AniStudio/Gui/ImageView.cpp[m
[36m@@ -8,7 +8,7 @@[m
 [m
 namespace ECS {[m
 [m
[31m-ImageView::ImageView() : textureID(0) {}[m
[32m+[m[32mImageView::ImageView() {}[m
 [m
 void ImageView::Render() {[m
     ImGui::SetNextWindowSize(ImVec2(1024, 1024), ImGuiCond_FirstUseEver);[m
[36m@@ -98,7 +98,7 @@[m [mvoid ImageView::Render() {[m
 [m
     // Display loaded image[m
     if (imageComponent.imageData) {[m
[31m-        ImGui::Image(reinterpret_cast<void *>(static_cast<intptr_t>(textureID)),[m
[32m+[m[32m        ImGui::Image(reinterpret_cast<void *>(static_cast<intptr_t>(imageComponent.textureID)),[m
                      ImVec2(static_cast<float>(imageComponent.width), static_cast<float>(imageComponent.height)));[m
     } else {[m
         ImGui::Text("No image loaded.");[m
[36m@@ -125,16 +125,16 @@[m [mvoid ImageView::SaveImage(const std::string &filePath) {[m
 }[m
 [m
 void ImageView::CreateTexture() {[m
[31m-    if (textureID) {[m
[31m-        glDeleteTextures(1, &textureID);[m
[32m+[m[32m    if (imageComponent.textureID) {[m
[32m+[m[32m        glDeleteTextures(1, &imageComponent.textureID);[m
     }[m
 [m
     if (!imageComponent.imageData || imageComponent.width <= 0 || imageComponent.height <= 0) {[m
         throw std::runtime_error("Invalid image data or dimensions.");[m
     }[m
 [m
[31m-    glGenTextures(1, &textureID);[m
[31m-    glBindTexture(GL_TEXTURE_2D, textureID);[m
[32m+[m[32m    glGenTextures(1, &imageComponent.textureID);[m
[32m+[m[32m    glBindTexture(GL_TEXTURE_2D, imageComponent.textureID);[m
 [m
     glPixelStorei(GL_UNPACK_ALIGNMENT, 1);[m
 [m
[36m@@ -156,8 +156,8 @@[m [mvoid ImageView::CreateTexture() {[m
 [m
 [m
 ImageView::~ImageView() {[m
[31m-    if (textureID) {[m
[31m-        glDeleteTextures(1, &textureID);[m
[32m+[m[32m    if (imageComponent.textureID) {[m
[32m+[m[32m        glDeleteTextures(1, &imageComponent.textureID);[m
     }[m
 }[m
 [m
[1mdiff --git a/AniStudio/Gui/ImageView.hpp b/AniStudio/Gui/ImageView.hpp[m
[1mindex c9f6ac2..854d6cc 100644[m
[1m--- a/AniStudio/Gui/ImageView.hpp[m
[1m+++ b/AniStudio/Gui/ImageView.hpp[m
[36m@@ -25,7 +25,6 @@[m [mprivate:[m
     EntityManager &mgr = ECS::EntityManager::Ref();[m
     EntityID entity = NULL;[m
     ImageComponent imageComponent;[m
[31m-    GLuint textureID;[m
 };[m
 [m
 } // namespace ECS[m
[1mdiff --git a/AniStudio/Gui/MenuBar.cpp b/AniStudio/Gui/MenuBar.cpp[m
[1mindex d2b8435..fb8ddbb 100644[m
[1m--- a/AniStudio/Gui/MenuBar.cpp[m
[1m+++ b/AniStudio/Gui/MenuBar.cpp[m
[36m@@ -28,7 +28,7 @@[m [mvoid ShowMenuBar(GLFWwindow* window) {[m
         if (ImGui::BeginMenu("View")) {[m
             ImGui::MenuItem("Diffusion View", NULL, &viewState.showDiffusionView);[m
             ImGui::MenuItem("Upscale View", NULL, &viewState.showDiffusionView);[m
[31m-            // ImGui::MenuItem("Drawing Canvas", NULL, &viewState.showDrawingCanvas);[m
[32m+[m[32m            ImGui::MenuItem("Drawing Canvas", NULL, &viewState.showDrawingCanvas);[m
             ImGui::MenuItem("Settings", NULL, &viewState.showSettingsView);[m
             ImGui::MenuItem("MeshView", NULL, &viewState.showMeshView);[m
             ImGui::MenuItem("NodeGraph", NULL, &viewState.showNodeGraphView);[m
